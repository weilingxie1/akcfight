{"ast":null,"code":"var _jsxFileName = \"/Users/weilingxie/IT/Projects/akcfight/src/components/MatchSheet.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Result from './Result';\nimport ResultButtons from './ResultButtons';\nimport InitialFights from '../default/InitialFights.json';\nimport InitialScore from '../default/InitialScore.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MatchSheet = () => {\n  _s();\n\n  const [fights, setFights] = useState(InitialFights);\n  const [score, setScore] = useState(InitialScore);\n\n  const addScore = team => {\n    let newScore = [...score];\n    let index = -1;\n    newScore.map((t, i) => {\n      if (t.name === team) index = i;\n      return i;\n    });\n    newScore[index] = { ...newScore[index],\n      score: newScore[index].score + 1\n    };\n    newScore.sort((team1, team2) => team1.score > team2.score ? -1 : 1);\n    setScore(newScore);\n  };\n\n  const removeScore = team => {\n    let newScore = [...score];\n    let index = -1;\n    newScore.map((t, i) => {\n      if (t.name === team) index = i;\n      return i;\n    });\n    newScore[index] = { ...newScore[index],\n      score: newScore[index].score - 1\n    };\n    newScore.sort((team1, team2) => team1.score > team2.score ? -1 : 1);\n    setScore(newScore);\n  };\n\n  const setResult = (index, type, winTeam) => {\n    let newFights = [...fights];\n    newFights[index] = { ...newFights[index],\n      [type]: winTeam\n    };\n    setFights(newFights);\n    addScore(winTeam);\n  };\n\n  const resetResult = (index, type, resetTeam) => {\n    let newFights = [...fights];\n    newFights[index] = { ...newFights[index],\n      [type]: \"\"\n    };\n    setFights(newFights);\n    removeScore(resetTeam);\n  };\n\n  const changeColor = index => {\n    let newFights = [...fights];\n    let team1Color = newFights[index].team1.color;\n    let team2Color = newFights[index].team2.color;\n    newFights[index].team1.color = team2Color;\n    newFights[index].team2.color = team1Color;\n    setFights(newFights);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Score Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Team\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: score.map((t, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: t.score\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 33\n          }, this)]\n        }, index + 999, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Fights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"#\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Versus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Suburi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Kihon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Kata\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: fights.map((fight, index) => {\n          let {\n            id,\n            team1,\n            team2,\n            suburi,\n            kihon,\n            kata\n          } = fight;\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [team1.name, \"-\", team2.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: suburi === \"\" ? /*#__PURE__*/_jsxDEV(ResultButtons, {\n                index: index,\n                type: \"suburi\",\n                team1: team1,\n                team2: team2,\n                setResult: setResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 56\n              }, this) : /*#__PURE__*/_jsxDEV(Result, {\n                index: index,\n                type: \"suburi\",\n                result: suburi,\n                resetResult: resetResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 154\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: kihon === \"\" ? /*#__PURE__*/_jsxDEV(ResultButtons, {\n                index: index,\n                type: \"kihon\",\n                team1: team1,\n                team2: team2,\n                setResult: setResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 55\n              }, this) : /*#__PURE__*/_jsxDEV(Result, {\n                index: index,\n                type: \"kihon\",\n                result: kihon,\n                resetResult: resetResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 152\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: kata === \"\" ? /*#__PURE__*/_jsxDEV(ResultButtons, {\n                index: index,\n                type: \"kata\",\n                team1: team1,\n                team2: team2,\n                setResult: setResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 54\n              }, this) : /*#__PURE__*/_jsxDEV(Result, {\n                index: index,\n                type: \"kata\",\n                result: kata,\n                resetResult: resetResult\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 150\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-sm btn-success\",\n                onClick: () => changeColor(index),\n                children: \"switch color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this)]\n          }, id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MatchSheet, \"Hx2zSif4WCTyWQQBL1h8b30HVC0=\");\n\n_c = MatchSheet;\nexport default MatchSheet;\n\nvar _c;\n\n$RefreshReg$(_c, \"MatchSheet\");","map":{"version":3,"sources":["/Users/weilingxie/IT/Projects/akcfight/src/components/MatchSheet.tsx"],"names":["React","useState","Result","ResultButtons","InitialFights","InitialScore","MatchSheet","fights","setFights","score","setScore","addScore","team","newScore","index","map","t","i","name","sort","team1","team2","removeScore","setResult","type","winTeam","newFights","resetResult","resetTeam","changeColor","team1Color","color","team2Color","fight","id","suburi","kihon","kata"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport Result from './Result'\nimport ResultButtons from './ResultButtons'\nimport { Fight, Score } from '../types/Types'\nimport InitialFights from '../default/InitialFights.json'\nimport InitialScore from '../default/InitialScore.json'\n\nconst MatchSheet = () => {\n    const [fights, setFights ] = useState<Fight[]>(InitialFights);\n    const [score, setScore] = useState<Score[]>(InitialScore);    \n\n    const addScore = (team:string) => {\n        let newScore = [...score];\n\n        let index = -1;\n        newScore.map((t, i) => {\n            if(t.name === team) index = i;\n            return i;\n        });\n\n        newScore[index]= {...newScore[index], score: newScore[index].score+1};\n\n        newScore.sort((team1,team2)=>(team1.score>team2.score) ? -1 : 1)\n        \n        setScore(newScore);\n    }\n\n    const removeScore = (team:string) => {\n        let newScore = [...score];\n        let index = -1;\n        newScore.map((t, i) => {\n            if(t.name === team) index = i;\n            return i;\n        });\n        newScore[index]= {...newScore[index], score: newScore[index].score-1};\n\n        newScore.sort((team1,team2)=>(team1.score>team2.score) ? -1 : 1)\n        \n        setScore(newScore);\n    }\n    \n    const setResult = (index:number, type: string, winTeam: string): void => {\n        let newFights = [...fights];\n        newFights[index] = {...newFights[index], [type]:winTeam};\n        setFights(newFights);\n        \n        addScore(winTeam);\n    }\n\n    const resetResult = (index:number, type: string, resetTeam:string) => {\n        let newFights = [...fights];\n        newFights[index] = {...newFights[index], [type]:\"\"};\n        setFights(newFights);\n        removeScore(resetTeam);\n    }\n\n    const changeColor = (index:number) => {\n        let newFights = [...fights];\n        let team1Color = newFights[index].team1.color;\n        let team2Color = newFights[index].team2.color;\n        newFights[index].team1.color =  team2Color;\n        newFights[index].team2.color =  team1Color;\n        setFights(newFights);\n    }\n\n    return (       \n        <div>\n            <h3 className=\"text-center\">Score Board</h3>\n            <table className=\"table table-striped\">                \n                <thead>\n                    <tr>\n                        <th>Team</th>\n                        <th>Score</th>\n                    </tr>\n                </thead>\n                <tbody>                    \n                    {\n                        score.map((t, index) => (\n                            <tr key={index+999}>\n                                <td>{t.name}</td>\n                                <td>{t.score}</td>\n                            </tr>\n                        ))                                                                                 \n                    }\n                </tbody>\n            </table>\n            <hr />\n            <h3  className=\"text-center\">Fights</h3>\n            <table className=\"table table-striped\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Versus</th>\n                        <th>Suburi</th>\n                        <th>Kihon</th>\n                        <th>Kata</th>\n                        <th></th>\n                    </tr>\n                </thead>\n                <tbody>                    \n                    {\n                        fights.map((fight,index)=>{\n                            let { id, team1, team2, suburi, kihon, kata } = fight;                                                      \n\n                            return (\n                                <tr key={id}>\n                                    <td>{id}</td>\n                                    <td>{team1.name}-{team2.name}</td>                                    \n                                    <td>{suburi===\"\" ? <ResultButtons index={index} type='suburi' team1={team1} team2={team2} setResult={setResult} /> : <Result index={index} type='suburi' result={suburi} resetResult={resetResult} />}</td>\n                                    <td>{kihon===\"\" ? <ResultButtons index={index} type='kihon' team1={team1} team2={team2} setResult={setResult} /> : <Result index={index} type='kihon' result={kihon} resetResult={resetResult} />}</td>\n                                    <td>{kata===\"\" ? <ResultButtons index={index} type='kata' team1={team1} team2={team2} setResult={setResult} /> : <Result index={index} type='kata' result={kata} resetResult={resetResult} />}</td>                                    \n                                    <td><button className=\"btn btn-sm btn-success\" onClick={()=>changeColor(index)}>switch color</button></td>\n                                </tr>\n                            )                        \n                        })\n                    }                \n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default MatchSheet;"]},"metadata":{},"sourceType":"module"}